name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: windows-latest
    timeout-minutes: 90

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Install VS2019 Build Tools
      - name: Install VS2019 Build Tools
        run: choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.Windows10SDK.19041 --includeRecommended --includeOptional --quiet --norestart" --yes

      # 3Ô∏è‚É£ Setup MSBuild 2019
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '[16.0,17.0)'

      # 4Ô∏è‚É£ Setup JDK 11 (Amazon Corretto)
      - name: Set up JDK 11 (Corretto)
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'corretto'

      # 5Ô∏è‚É£ Setup Node.js 16.3.0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.3.0'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      # 6Ô∏è‚É£ Setup Python 3.10
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 7Ô∏è‚É£ Configure node-gyp to use VS2019
      - name: Configure node-gyp
        run: npm config set msvs_version 2019

      # 8Ô∏è‚É£ Install npm dependencies
      - name: Install npm dependencies
        run: npm ci

      # 9Ô∏è‚É£ Generate Gradle wrapper if missing
      - name: Generate Gradle wrapper if missing
        shell: pwsh
        run: |
          if (!(Test-Path "./gradlew") -or !(Test-Path "./gradlew.bat")) {
              Write-Host "Gradle wrapper missing, generating in temporary folder..."
              mkdir temp-wrapper
              cd temp-wrapper
              gradle wrapper --gradle-version 8.5
              cd ..
              Copy-Item -Path "temp-wrapper/gradlew" -Destination "./gradlew"
              Copy-Item -Path "temp-wrapper/gradlew.bat" -Destination "./gradlew.bat"
              Copy-Item -Recurse -Path "temp-wrapper/gradle/wrapper" -Destination "./gradle/wrapper"
              Remove-Item -Recurse -Force temp-wrapper
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git add gradlew gradlew.bat gradle/wrapper/
              git commit -m "Add Gradle wrapper from CI" || Write-Host "No changes to commit"
              git push
          } else {
              Write-Host "Gradle wrapper already exists, skipping generation."
          }

      # üîü Run Gradle build for API module (using existing wrapper)
      - name: Run Gradle Build for API module
        shell: pwsh
        run: |
          Write-Host "Running Gradle Build for API module"
          .\gradlew :api:createApiJar --build-cache

      # 1Ô∏è‚É£1Ô∏è‚É£ Run GT UI tests
      - name: Run GT UI Tests
        shell: pwsh
        run: |
          Write-Host "Running GT UI Tests"
          npm run gt-ui-tests -- --cucumberTags=@add_activity
